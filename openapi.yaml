openapi: 3.0.0

info:
  title: Azarashi
  version: '1.0'
  description: 'ToDoリスト機能を提供するAPI. トドじゃねーよ.'
  termsOfService: 'http://localhost:8080/api/v1'


# Path の定義 ------------------------------------------------------------------

paths:
  /tasks:
    post:
      summary: 'タスクを新規作成する.'

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_request'

      responses:
        201:
          description: '成功.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_response'

        400:
          description: '失敗.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'

      tags:
        - 'create'

  /tasks/{task_id}:
    get:
      summary: 'タスクを取得する.'

      parameters:
        - name: 'task_id'
          in: 'path'
          required: true
          schema:
            $ref: '#/components/schemas/snowflake'

      responses:
        200:
          description: '成功.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_response'

        404:
          description: '失敗.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'

      tags:
        - 'read'

    delete:
      summary: 'タスクを削除する.'

      parameters:
        - name: 'task_id'
          in: 'path'
          required: true
          schema:
            $ref: '#/components/schemas/snowflake'

      responses:
        204:
          description: '成功.'

        404:
          description: '失敗.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'

      tags:
        - 'delete'

  /tasks/{task_id}/close:
    put:
      summary: 'タスクを完了状態にする.'

      parameters:
        - name: 'task_id'
          in: 'path'
          required: true
          schema:
            $ref: '#/components/schemas/snowflake'

      responses:
        200:
          description: '成功.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_response'

        404:
          description: '失敗.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'

      tags:
        - 'update'

  /tasks/{task_id}/open:
    put:
      summary: 'タスクを未完了状態にする.'

      parameters:
        - name: 'task_id'
          in: 'path'
          required: true
          schema:
            $ref: '#/components/schemas/snowflake'

      responses:
        200:
          description: '成功.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_response'

        404:
          description: '失敗.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'

      tags:
        - 'update'

  /tasks/{task_id}/title:
    put:
      summary: 'タイトルを変更する.'

      parameters:
        - name: 'task_id'
          in: 'path'
          required: true
          schema:
            $ref: '#/components/schemas/snowflake'

      requestBody:
        content:
          application/json:
            schema:
              type: 'object'
              properties:
                title:
                  $ref: '#/components/schemas/title'

      responses:
        200:
          description: '成功.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_response'

        400:
          description: '失敗.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'

        404:
          description: '失敗.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'

      tags:
        - 'update'

  /tasks/{task_id}/description:
    put:
      summary: '説明文を変更する.'

      parameters:
        - name: 'task_id'
          in: 'path'
          required: true
          schema:
            $ref: '#/components/schemas/snowflake'

      requestBody:
        content:
          application/json:
            schema:
              type: 'object'
              properties:
                description:
                  $ref: '#/components/schemas/description'

      responses:
        200:
          description: '成功.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_response'

        400:
          description: '失敗.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'

        404:
          description: '失敗.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'

      tags:
        - 'update'

  /tasks/{task_id}/children:
    post:
      summary: '子タスクを追加する.'

      parameters:
        - name: 'task_id'
          in: 'path'
          required: true
          schema:
            $ref: '#/components/schemas/snowflake'

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_request'

      responses:
        201:
          description: '成功.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_response'

        400:
          description: '失敗.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'

      tags:
        - 'create'

  /tasks/{task_id}/parent:
    put:
      summary: '親を変更する.'
      description: 'TIPS: 自身を親とすることで親を持たないタスクにできる.'

      parameters:
          - name: 'task_id'
            in: 'path'
            required: true
            schema:
              $ref: '#/components/schemas/snowflake'

      requestBody:
        content:
          application/json:
            schema:
              type: 'object'
              properties:
                parent_id:
                  $ref: '#/components/schemas/snowflake'

      responses:
        200:
          description: '成功.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_response'

        400:
          description: '失敗.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'

        404:
          description: '失敗.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'

      tags:
        - 'update'


# 型の定義 ---------------------------------------------------------------------

components:
  schemas:

    task_request:
      description: 'タスク作成リクエストに使用する.'
      type: 'object'
      properties:
        title:
          $ref: '#/components/schemas/title'

        description:
          $ref: '#/components/schemas/description'

        children:
          type: 'array'
          items:
            $ref: '#/components/schemas/task_request'

    task_response:
      description: 'タスクのレスポンスを表す.'
      type: 'object'
      properties:
        id:
          $ref: '#/components/schemas/snowflake'

        is_closed:
          $ref: '#/components/schemas/is_closed'

        title:
          $ref: '#/components/schemas/title'

        description:
          $ref: '#/components/schemas/description'

        children:
          type: 'array'
          items:
            $ref: '#/components/schemas/task_response'

    error_response:
      description: 'エラー情報のレスポンスを表す.'
      type: 'object'
      properties:
        message:
          $ref: '#/components/schemas/error'

    error:
      description: 'エラー'
      type: 'string'
      example: 'xxxx yyyy failed.'

    snowflake:
      description: '各種ID'
      type: 'string'
      pattern: '[0-9]{a,b,c,d,e,f}'
      minLength: 16
      maxLength: 16
      example: '0000000000000000'

    is_closed:
      description: 'タスクが完了ならtrue.'
      type: 'boolean'

    title:
      description: 'このタスクのタイトル.'
      type: 'string'
      minLength: 1
      maxLength: 100

    description:
      description: 'このタスクの説明.'
      type: 'string'
      maxLength: 1000